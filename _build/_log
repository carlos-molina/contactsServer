### Starting build.
# Target: tests.ml.depends, tags: { extension:ml, file:tests.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules tests.ml > tests.ml.depends # cached
# Target: config.ml.depends, tags: { extension:ml, file:config.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules config.ml > config.ml.depends # cached
# Target: config.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:config.cmo, file:config.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o config.cmo config.ml # cached
# Target: helper.ml.depends, tags: { extension:ml, file:helper.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules helper.ml > helper.ml.depends # cached
# Target: query_lexer.mll, tags: { extension:mll, file:query_lexer.mll, lexer, ocaml, ocamllex, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
/usr/local/bin/ocamllex.opt -q query_lexer.mll # cached
# Target: query_lexer.ml.depends, tags: { extension:ml, file:query_lexer.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules query_lexer.ml > query_lexer.ml.depends # cached
# Target: query_parser.mly.depends, tags: { extension:mly, file:query_parser.mly, menhir_ocamldep, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' query_parser.mly > query_parser.mly.depends # cached
# Target: query_parser.mly, tags: { byte, compile, extension:mly, file:query_parser.mly, menhir, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), parser, quiet, thread, traverse }
menhir --ocamlc 'ocamlfind ocamlc -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax' --infer query_parser.mly # cached
# Target: query_parser.mli.depends, tags: { extension:mli, file:query_parser.mli, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules query_parser.mli > query_parser.mli.depends # cached
# Target: query_parser.cmi, tags: { byte, compile, extension:mli, file:query_parser.mli, interf, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o query_parser.cmi query_parser.mli # cached
# Target: query_lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:query_lexer.cmo, file:query_lexer.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o query_lexer.cmo query_lexer.ml # cached
# Target: tuple_lexer.mll, tags: { extension:mll, file:tuple_lexer.mll, lexer, ocaml, ocamllex, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
/usr/local/bin/ocamllex.opt -q tuple_lexer.mll # cached
# Target: tuple_lexer.ml.depends, tags: { extension:ml, file:tuple_lexer.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules tuple_lexer.ml > tuple_lexer.ml.depends # cached
# Target: tuple_parser.mly.depends, tags: { extension:mly, file:tuple_parser.mly, menhir_ocamldep, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' tuple_parser.mly > tuple_parser.mly.depends # cached
# Target: tuple_parser.mly, tags: { byte, compile, extension:mly, file:tuple_parser.mly, menhir, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), parser, quiet, thread, traverse }
menhir --ocamlc 'ocamlfind ocamlc -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax' --infer tuple_parser.mly # cached
# Target: tuple_parser.mli.depends, tags: { extension:mli, file:tuple_parser.mli, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules tuple_parser.mli > tuple_parser.mli.depends # cached
# Target: tuple_parser.cmi, tags: { byte, compile, extension:mli, file:tuple_parser.mli, interf, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o tuple_parser.cmi tuple_parser.mli # cached
# Target: tuple_lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:tuple_lexer.cmo, file:tuple_lexer.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o tuple_lexer.cmo tuple_lexer.ml # cached
# Target: helper.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:helper.cmo, file:helper.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o helper.cmo helper.ml # cached
# Target: moana.mli.depends, tags: { extension:mli, file:moana.mli, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules moana.mli > moana.mli.depends # cached
# Target: moana.cmi, tags: { byte, compile, extension:mli, file:moana.mli, interf, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o moana.cmi moana.mli # cached
# Target: moana_irmin.ml.depends, tags: { extension:ml, file:moana_irmin.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules moana_irmin.ml > moana_irmin.ml.depends # cached
# Target: moana_irmin.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:moana_irmin.cmo, file:moana_irmin.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o moana_irmin.cmo moana_irmin.ml # cached
# Target: moana_lists.ml.depends, tags: { extension:ml, file:moana_lists.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules moana_lists.ml > moana_lists.ml.depends # cached
# Target: moana_lists.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:moana_lists.cmo, file:moana_lists.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o moana_lists.cmo moana_lists.ml # cached
# Target: moana_rete.ml.depends, tags: { extension:ml, file:moana_rete.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules moana_rete.ml > moana_rete.ml.depends # cached
# Target: rete.ml.depends, tags: { extension:ml, file:rete.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules rete.ml > rete.ml.depends # cached
# Target: rete.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:rete.cmo, file:rete.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o rete.cmo rete.ml # cached
# Target: moana_rete.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:moana_rete.cmo, file:moana_rete.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o moana_rete.cmo moana_rete.ml # cached
# Target: tests.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:tests.cmo, file:tests.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o tests.cmo tests.ml # cached
# Target: moana.ml.depends, tags: { extension:ml, file:moana.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules moana.ml > moana.ml.depends # cached
# Target: moana.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:moana.cmo, file:moana.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o moana.cmo moana.ml # cached
# Target: query_parser.ml.depends, tags: { extension:ml, file:query_parser.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules query_parser.ml > query_parser.ml.depends # cached
# Target: query_parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:query_parser.cmo, file:query_parser.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o query_parser.cmo query_parser.ml # cached
# Target: tuple_parser.ml.depends, tags: { extension:ml, file:tuple_parser.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules tuple_parser.ml > tuple_parser.ml.depends # cached
# Target: tuple_parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:tuple_parser.cmo, file:tuple_parser.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o tuple_parser.cmo tuple_parser.ml # cached
# Target: tests.byte, tags: { byte, dont_link_with, extension:byte, file:tests.byte, link, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), program, quiet, thread, traverse }
ocamlfind ocamlc -linkpkg -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax config.cmo query_parser.cmo query_lexer.cmo tuple_parser.cmo tuple_lexer.cmo helper.cmo moana.cmo moana_irmin.cmo moana_lists.cmo rete.cmo moana_rete.cmo tests.cmo -o tests.byte # cached
# Target: examples/contacts.ml.depends, tags: { extension:ml, file:examples/contacts.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules examples/contacts.ml > examples/contacts.ml.depends # cached
# Target: examples/contacts.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:examples/contacts.cmo, file:examples/contacts.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -I examples -o examples/contacts.cmo examples/contacts.ml # cached
# Target: examples/contacts.byte, tags: { byte, dont_link_with, extension:byte, file:examples/contacts.byte, link, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), program, quiet, thread, traverse }
ocamlfind ocamlc -linkpkg -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax config.cmo query_parser.cmo query_lexer.cmo tuple_parser.cmo tuple_lexer.cmo helper.cmo rete.cmo examples/contacts.cmo -o examples/contacts.byte # cached
# Target: clienthtml.ml.depends, tags: { extension:ml, file:clienthtml.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules clienthtml.ml > clienthtml.ml.depends # cached
# Target: clienthtml.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:clienthtml.cmo, file:clienthtml.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o clienthtml.cmo clienthtml.ml # cached
# Target: clienthtml.byte, tags: { byte, dont_link_with, extension:byte, file:clienthtml.byte, link, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), program, quiet, thread, traverse }
ocamlfind ocamlc -linkpkg -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax config.cmo clienthtml.cmo -o clienthtml.byte # cached
# Target: contactsServer.ml.depends, tags: { extension:ml, file:contactsServer.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules contactsServer.ml > contactsServer.ml.depends # cached
# Target: rcontacts.ml.depends, tags: { extension:ml, file:rcontacts.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules rcontacts.ml > rcontacts.ml.depends # cached
# Target: contactsdata.ml.depends, tags: { extension:ml, file:contactsdata.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules contactsdata.ml > contactsdata.ml.depends # cached
# Target: contactshelper.ml.depends, tags: { extension:ml, file:contactshelper.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules contactshelper.ml > contactshelper.ml.depends # cached
# Target: contactshelper.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:contactshelper.cmo, file:contactshelper.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o contactshelper.cmo contactshelper.ml # cached
# Target: jsonhelper.ml.depends, tags: { extension:ml, file:jsonhelper.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules jsonhelper.ml > jsonhelper.ml.depends # cached
# Target: jsonhelper.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:jsonhelper.cmo, file:jsonhelper.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o jsonhelper.cmo jsonhelper.ml # cached
# Target: contactsdata.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:contactsdata.cmo, file:contactsdata.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o contactsdata.cmo contactsdata.ml # cached
# Target: htmlhelper.ml.depends, tags: { extension:ml, file:htmlhelper.ml, ocaml, ocamldep, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamldep -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -modules htmlhelper.ml > htmlhelper.ml.depends # cached
# Target: htmlhelper.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:htmlhelper.cmo, file:htmlhelper.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o htmlhelper.cmo htmlhelper.ml # cached
# Target: rcontacts.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:rcontacts.cmo, file:rcontacts.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o rcontacts.cmo rcontacts.ml # cached
# Target: contactsServer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:contactsServer.cmo, file:contactsServer.ml, implem, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), quiet, thread, traverse }
ocamlfind ocamlc -c -annot -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax -o contactsServer.cmo contactsServer.ml # cached
# Target: contactsServer.byte, tags: { byte, dont_link_with, extension:byte, file:contactsServer.byte, link, ocaml, package(core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax), program, quiet, thread, traverse }
ocamlfind ocamlc -linkpkg -thread -package core,async,cohttp.async,lwt,yojson,atdgen,git.unix,irmin,irmin.unix,oUnit,sexplib.syntax,comparelib.syntax,bin_prot.syntax config.cmo query_parser.cmo query_lexer.cmo tuple_parser.cmo tuple_lexer.cmo helper.cmo contactshelper.cmo jsonhelper.cmo contactsdata.cmo htmlhelper.cmo rete.cmo rcontacts.cmo contactsServer.cmo -o contactsServer.byte # cached
# Compilation successful.
